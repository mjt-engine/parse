{"version":3,"file":"processSsePartialUntilNoMoreStops.js","sourceRoot":"","sources":["../src/processSsePartialUntilNoMoreStops.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAExD,MAAM,CAAC,MAAM,iCAAiC,GAAG,KAAK,EAAK,MAM1D,EAAmB,EAAE;IACpB,MAAM,IAAI,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,iCAAiC,CAAC;QACvC,GAAG,MAAM;QACT,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { SseConsumer } from \"./SseConsumer\";\nimport { processSsePartial } from \"./processSsePartial\";\n\nexport const processSsePartialUntilNoMoreStops = async <T>(params: {\n  done: boolean;\n  input: string;\n  reader: ReadableStreamDefaultReader<string>;\n  dataParser?: (data: string) => T | undefined;\n  consumer: SseConsumer<T>;\n}): Promise<string> => {\n  const rest = await processSsePartial(params);\n  if (rest.length === 0 || rest === params.input) {\n    return rest;\n  }\n\n  return processSsePartialUntilNoMoreStops({\n    ...params,\n    input: rest,\n  });\n};\n"]}